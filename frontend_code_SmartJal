// This will be the React frontend for SmartJal
// We'll build a PWA-style app where users can report water issues

import { useState } from 'react';
import axios from 'axios';

export default function SmartJalApp() {
  const [location, setLocation] = useState(null);
  const [image, setImage] = useState(null);
  const [description, setDescription] = useState('');
  const [issueType, setIssueType] = useState('Leakage');
  const [status, setStatus] = useState('');

  const handleLocation = () => {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        pos => {
          setLocation({ lat: pos.coords.latitude, lon: pos.coords.longitude });
        },
        err => {
          setStatus('Failed to get location');
        }
      );
    } else {
      setStatus('Geolocation not supported');
    }
  };

  const handleSubmit = async () => {
    if (!location || !image || !description) {
      setStatus('All fields are required');
      return;
    }

    const formData = new FormData();
    formData.append('image', image);
    formData.append('description', description);
    formData.append('issueType', issueType);
    formData.append('latitude', location.lat);
    formData.append('longitude', location.lon);

    try {
      const res = await axios.post('http://localhost:5000/report', formData);
      setStatus('Report submitted successfully');
    } catch (err) {
      setStatus('Error submitting report');
    }
  };

  return (
    <div className="p-4 max-w-md mx-auto">
      <h1 className="text-xl font-bold mb-4">SmartJal - Report Water Issues</h1>
      <label className="block mb-2">Issue Type:</label>
      <select className="mb-4 p-2 border" value={issueType} onChange={e => setIssueType(e.target.value)}>
        <option>Leakage</option>
        <option>Theft</option>
        <option>Contamination</option>
        <option>Other</option>
      </select>

      <label className="block mb-2">Description:</label>
      <textarea className="w-full mb-4 p-2 border" value={description} onChange={e => setDescription(e.target.value)} />

      <label className="block mb-2">Upload Image:</label>
      <input className="mb-4" type="file" accept="image/*" onChange={e => setImage(e.target.files[0])} />

      <button className="bg-blue-500 text-white px-4 py-2 rounded" onClick={handleLocation}>Get Location</button>
      <button className="bg-green-600 text-white px-4 py-2 rounded ml-2" onClick={handleSubmit}>Submit Report</button>

      {status && <p className="mt-4 text-sm text-red-500">{status}</p>}
    </div>
  );
}

